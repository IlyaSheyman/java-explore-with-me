-- categories
CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(50) NOT NULL
);

-- users
CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(300) NOT NULL,
  email VARCHAR(100) NOT NULL UNIQUE
);

-- location
CREATE TABLE  IF NOT EXISTS location (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat DOUBLE PRECISION NOT NULL,
    lon DOUBLE PRECISION NOT NULL,
    CONSTRAINT pk_location PRIMARY KEY (id)
);

-- events
CREATE TABLE IF NOT EXISTS events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR(120) NOT NULL,
  annotation VARCHAR(1500) NOT NULL,
  description VARCHAR(6000),
  participant_limit INTEGER NOT NULL,
  category_id BIGINT NOT NULL,
  initiator_id BIGINT NOT NULL,
  paid BOOLEAN NOT NULL,
  created_on TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  published_on TIMESTAMP WITHOUT TIME ZONE,
  event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  request_moderation BOOLEAN NOT NULL,
  state VARCHAR,
  views BIGINT NOT NULL,
  location_id BIGINT NOT NULL,
  FOREIGN KEY (category_id) REFERENCES categories (id),
  FOREIGN KEY (initiator_id) REFERENCES users (id),
  FOREIGN KEY (location_id) REFERENCES location (id) -- Correct reference to the location table
);


-- requests
CREATE TABLE IF NOT EXISTS event_requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id BIGINT,
    organizer_id BIGINT,
    visitor_id BIGINT,
    request BOOLEAN NOT NULL,
    FOREIGN KEY (event_id) REFERENCES events (id),
    FOREIGN KEY (organizer_id) REFERENCES users (id),
    FOREIGN KEY (visitor_id) REFERENCES users (id)
);